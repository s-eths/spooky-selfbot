import discord, os, json, asyncio
from discord.ext import commands
from data.print import *

with open ("./data/config.json", "r") as file:
    data = json.load(file)

gcspam_toggle = False

class gcspam(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def gcspam(self, ctx, user: discord.User = None, user2: discord.User = None, amount: int = 5, message = "GET FUCKED BY SPOOKY SELF-BOT LOOOL"):
        if not user or not user2:
            await ctx.message.delete()
            error = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[?]** **discord.User** is Missing, Incomplete or Incorrect. 2 Users are Required.\n\n-# Created by @ s.eths・v{data['version']}")
            await asyncio.sleep(3)
            await error.delete()
            return
        if not message:
            await ctx.message.delete()
            error = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[?]** Missing **message**.\n\n-# Created by @ s.eths・v{data['version']}")
            await asyncio.sleep(3)
            await error.delete()
            return
        
        global gcspam_toggle
        gcspam_toggle = True
        created = 0

        await ctx.message.delete()
        alert = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[!]** Attempting to Groupchat Spam {user.mention}, {user2.mention} Times.\n\n-# Created by @ s.eths・v{data['version']}")

        try:
            for i in range(amount):
                if not gcspam_toggle:
                    break
                try:
                    group = await self.bot.create_group(user, user2)
                    await group.send(f"@everyone {message} #{i + 1}")
                    await group.leave()
                    created += 1
                    await asyncio.sleep(0.5)
                except discord.HTTPException as error:
                    if error.code == 429:
                        print(error_text(f"RATE LIMITED - {error.message}"))
                        await asyncio.sleep(5)
                        continue
                    else:
                        raise error
        except Exception as error:
            error = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[?]** ERROR: {str(error)}\n\n-# Created by @ s.eths・v{data['version']}")
            await asyncio.sleep(3)
            await error.delete()
            return
        
        await alert.edit(content = f"**spooky.wtf - Discord Self-Bot**\n\n> **[!]** Successfully Groupchat Spammed {user.mention}, {user2.mention} {amount} Times.\n\n-# Created by @ s.eths・v{data['version']}")
    
    @commands.command()
    async def stopgcspam(self, ctx):
        global gcspam_toggle
        gcspam_toggle = False
        await ctx.message.delete()
        alert = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[!]** Successfully stopped Groupchat Spam.\n\n-# Created by @ s.eths・v{data['version']}")

async def setup(bot):
    await bot.add_cog(gcspam(bot))