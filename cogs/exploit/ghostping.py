import discord, os, json, asyncio
from discord.ext import commands
from data.print import *

with open ("./data/config.json", "r") as file:
    data = json.load(file)

ghostping_toggle = False
ghostping_target = None
ghostping_task = None

class ghostping(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def ghostping(self, ctx, user: discord.User = None, timeout: int = 1):
        if not user:
            await ctx.message.delete()
            error = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[?]** **discord.User** is Missing, Incomplete or Incorrect.\n\n-# Created by @ s.eths・v{data['version']}")
            await asyncio.sleep(3)
            await error.delete()
            return
        
        global ghostping_toggle, ghostping_target, ghostping_task
        ghostping_toggle = True
        ghostping_target = user

        await ctx.message.delete()
        spam_task = asyncio.create_task(self.ghostpingloop(ctx, user, timeout))
    
    async def ghostpingloop(self, ctx, user, timeout):
        global ghostping_toggle
        while ghostping_toggle:
            message = await ctx.send(user.mention)
            await asyncio.sleep(0.1)
            await message.delete()
            await asyncio.sleep(timeout)
    
    @commands.command()
    async def stopghostping(self, ctx):
        global ghostping_toggle, ghostping_target, ghostping_task
        ghostping_toggle = False
        if ghostping_task:
            ghostping_task.cancel()
            ghostping_task = None
        await ctx.message.delete()
        alert = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[!]** Successfully stopped Ghost Pinging {ghostping_target.mention}.\n\n-# Created by @ s.eths・v{data['version']}")

async def setup(bot):
    await bot.add_cog(ghostping(bot))
