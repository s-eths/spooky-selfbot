import discord, os, json, asyncio
from discord.ext import commands
from data.print import *

with open ("./data/config.json", "r") as file:
    data = json.load(file)

spam_toggle = False
spam_message = None
spam_task = None

class spam(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def spam(self, ctx, *args):
        if not args:
            await ctx.message.delete()
            error = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[?]** Missing **message**\n\n-# Created by @ s.eths・v{data['version']}")
            await asyncio.sleep(3)
            await error.delete()
            return
        
        try:
            timeout = float(args[0])
            message = " ".join(args[1:])
        except ValueError:
            timeout = 1
            message = " ".join(args)

        if not message:
            await ctx.message.delete()
            error = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[?]** Missing **message**\n\n-# Created by @ s.eths・v{data['version']}")
            await asyncio.sleep(3)
            await error.delete()
            return
        
        global spam_toggle, spam_message, spam_task
        spam_toggle = True
        spam_message = message

        await ctx.message.delete()
        spam_task = asyncio.create_task(self.spamloop(ctx, timeout, message))
    
    async def spamloop(self, ctx, timeout, message):
        global spam_toggle
        while spam_toggle:
            await ctx.send(message)
            await asyncio.sleep(timeout)
    
    @commands.command()
    async def stopspam(self, ctx):
        global spam_toggle, spam_message, spam_task
        spam_toggle = False
        if spam_task:
            spam_task.cancel()
            spam_task = None
        await ctx.message.delete()
        alert = await ctx.send(f"**spooky.wtf - Discord Self-Bot**\n\n> **[!]** Successfully stopped Spamming {spam_message}.\n\n-# Created by @ s.eths・v{data['version']}")

async def setup(bot):
    await bot.add_cog(spam(bot))